/*============= ECE 488 project ========================================================================================
 *====Filename: SProj3DFFTOverBLEFinal
 *====Authors: Spencer Dodder
 *====Last updated: 03/14/2019
 *======================================================================================================================
 */

/*============= Dependencies ===========================================================================================
 *==== Arduino IDE
 *==== Wire.h
 *==== SPI.h
 *==== Adafruit_BLE.h
 *==== Adafruit_BluefruitLE_SPI.h
 *==== BluefruitConfig.h
 *==== Adafruit_MMA8451.h
 *==== Adafruit_Sensor.h
 *======================================================================================================================
 */
 
/*============= Examples ===============================================================================================
 *====Expected output:
 *
  Adafruit Data Printing over bluetooth
  ------------------------------------------------
  Initialising the Bluefruit LE module: OK!
  Performing a factory reset: 
  AT+FACTORYRESET
  
  <- OK
  ATE=0
  
  <- OK
  Requesting Bluefruit info:
  ----------------
  BLESPIFRIEND
  nRF51822 0x00D6
  51C0F6ECB1ADC2AA
  0.8.0
  0.8.0
  Sep 25 2017
  S110 8.0.0, 0.2
  ----------------
  Please use Adafruit Bluefruit LE app to connect in UART mode
  Then Enter characters to send to Bluefruit
  
  ******************************
  Change LED activity to MODE
  Switching to DATA mode!
  ******************************
  33
  43
  -38
  29
  0
  8
  52
  -44
  -44
  -43
  -33
  -45
  -39
  -39
  -36
  -35
  -40
  -39
  -40
 *======================================================================================================================
 */

/*============= Trouble Shooting =======================================================================================
 *==== If arbitray symbols are printed or other issues first check that the baud rate in the Serial Monitor window
 *==== matches baud rate that is set.
 *======================================================================================================================
 */

#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include "Adafruit_BLE.h"
#include "Adafruit_BluefruitLE_SPI.h"
#include <Adafruit_MMA8451.h>
#include <Adafruit_Sensor.h>
#include "Adafruit_ZeroFFT.h"

#include "BluefruitConfig.h"

#if SOFTWARE_SERIAL_AVAILABLE
  #include <SoftwareSerial.h>
#endif

/*=========================================================================
    APPLICATION SETTINGS: with questions refer to SimpleBLEPrint
*/
    #define FACTORYRESET_ENABLE         1
    #define MINIMUM_FIRMWARE_VERSION    "0.6.6"
    #define MODE_LED_BEHAVIOUR          "MODE"
/*=========================================================================*/

//the signal in signal.h has 2048 samples. Set this to a value between 16 and 2048 inclusive.
//this must be a power of 2
    #define DATA_SIZE 256

//the sample rate
    #define FS 800

// Create the bluefruit object

/* ...hardware SPI, using SCK/MOSI/MISO hardware SPI pins and then user selected CS/IRQ/RST */
Adafruit_BluefruitLE_SPI ble(BLUEFRUIT_SPI_CS, BLUEFRUIT_SPI_IRQ, BLUEFRUIT_SPI_RST);

//Create an instance of the acceleromerter "mma"
Adafruit_MMA8451 mma = Adafruit_MMA8451();

//Create array for data
int16_t AccxData[2048];
int16_t AccyData[2048];
int16_t AcczData[2048];

// A small helper
void error(const __FlashStringHelper*err) {
  Serial.println(err);
  while (1);
}
 
//Start up
void setup(void)
{
  //while (!Serial);    //Check that the Serial Monitor is open
  delay(500);

  Serial.begin(115200);
  Serial.println(F("Adafruit Data Printing over bluetooth"));
  Serial.println(F("------------------------------------------------"));

  /* Initialise the module */
  Serial.print(F("Initialising the Bluefruit LE module: "));

  if ( !ble.begin(VERBOSE_MODE) )
  {
    error(F("Couldn't find Bluefruit, make sure it's in CoMmanD mode & check wiring?"));
  }
  Serial.println( F("OK!") );

  if ( FACTORYRESET_ENABLE )
  {
    /* Perform a factory reset to make sure everything is in a known state */
    Serial.println(F("Performing a factory reset: "));
    if ( ! ble.factoryReset() ){
      error(F("Couldn't factory reset"));
    }
  }

  /* Disable command echo from Bluefruit */
  ble.echo(false);

  Serial.println("Requesting Bluefruit info:");
  /* Print Bluefruit information */
  ble.info();

  Serial.println(F("Please use Adafruit Bluefruit LE app to connect in UART mode"));
  Serial.println(F("Then Enter characters to send to Bluefruit"));
  Serial.println();

  ble.verbose(false);  // debug info is a little annoying after this point!

  /* Wait for connection */
  while (! ble.isConnected()) {
      delay(500);
  }

  Serial.println(F("******************************"));

  // LED Activity command is only supported from 0.6.6
  if ( ble.isVersionAtLeast(MINIMUM_FIRMWARE_VERSION) )
  {
    // Change Mode LED Activity
    Serial.println(F("Change LED activity to " MODE_LED_BEHAVIOUR));
    ble.sendCommandCheckOK("AT+HWModeLED=" MODE_LED_BEHAVIOUR);
  }

  // Set module to DATA mode
  Serial.println( F("Switching to DATA mode!") );
  ble.setMode(BLUEFRUIT_MODE_DATA);

  Serial.println(F("******************************"));

  if (! mma.begin()) {
    Serial.println("No Start");
    while (1);
  }
  Serial.println("Starting");
  
}


//Main loop for body of code
/*Prints a random sent of numbers to app
 * logic: create random int
 *        print int to app via bluetooth
 */
void loop(void)
{
  //Get data in x
  for(int i = 0; i < 2048; i++){
    mma.read();
    AccxData[i] = mma.x;
  }
  
  //Run the FFT for x dimention
  ZeroFFT(AccxData, DATA_SIZE);
   
  //Transmit x
  for(int i = 0; i < DATA_SIZE/2; i++){
      //ble.println((String) FFT_BIN(i, FS, DATA_SIZE));            //print the frequency
      ble.println((String) AccxData[i]);    //print over bluetooth (must be cast as a string or char)
      Serial.println(AccxData[i]);        //prints to Serial Monitor for debugging (also you can use Serial plotter to compare results)
  }

    //Get data in y
  for(int i = 0; i < 2048; i++){
    mma.read();
    AccyData[i] = mma.y;
  }
  
  //Run the FFT for y dimention
  ZeroFFT(AccyData, DATA_SIZE);

  //Transmit y
  for(int i = 0; i < DATA_SIZE/2; i++){
      //ble.println((String) FFT_BIN(i, FS, DATA_SIZE));            //print the frequency
      ble.println((String) AccyData[i]);    //print over bluetooth (must be cast as a string or char)
      Serial.println(AccyData[i]);        //prints to Serial Monitor for debugging (also you can use Serial plotter to compare results)
  }

  //Get data in z
  for(int i = 0; i < 2048; i++){
    mma.read();
    AcczData[i] = mma.z;
  }
  
  //Run the FFT for z dimention
  ZeroFFT(AcczData, DATA_SIZE);
  
  //Transmit z
  for(int i = 0; i < DATA_SIZE/2; i++){
      //ble.println((String) FFT_BIN(i, FS, DATA_SIZE));            //print the frequency
      ble.println((String) AcczData[i]);    //print over bluetooth (must be cast as a string or char)
      Serial.println(AcczData[i]);        //prints to Serial Monitor for debugging (also you can use Serial plotter to compare results)
  }
  
}
